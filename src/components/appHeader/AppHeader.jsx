import {Link, NavLink} from "react-router-dom";
import './appHeader.scss';

const AppHeader = () => {
    /* Меняем наш a(ссылку) на Link, и href="#" мы уже не используем. А используем to - куда будет вести эта ссылка 
    Компонент Линк - это в браузере все та же ссылка(а) и у нее в браузере аттрибут href который ведет на главную или другую страницу
    Когда мы кликаем на эту ссылку то наш Компонент Роутер замечает эту ссылку и это действие и после этого начинает
искать подходящий Роут, те у него есть методы которые берут каждый Роут внутри и его аттрибут path. У нас там идет НЕ строгое
сравнение по-этому от сопуствующих Компонентов и аттрибутов здесь будет многое зависитью
    Если указан аттрибут exact то идет строго сравнение на ссылку 
    
    Есть два Компонента на которые нужно обратить внимание:
    1) Rediret - перенаправляет пользователя, к примеру если пользователь уже залогинен, то его перенаправляет на главную
панель, если нет то на форму Логина: 
        <Route exact path="/login"
            {login ? <Redirect to="/admin" /> : <LoginForm />}
        </Route>
    2) NavLink - делает почти все то же что и обычный Link, только у него есть отличие - стилизации активной ссылки - ТО-ЕСТЬ
КОГДА МЫ НАХОДИМСЯ НА АКТИВНОЙ ССЫЛКИ ТО МЫ БУДЕТ ЭТО ПОДСВЕЧИВАТЬ НА САЙТЕ !
NavLink exact activeStyle={{}} - в формате ИНЛАЙН стилей(те передаем объект) задаем стили нашей ссылки  */
    return (
        <header className="app__header">
            <h1 className="app__title">
                <Link to="/">
                    <span>Marvel</span> information portal
                </Link>
            </h1>
            <nav className="app__menu">
                <ul>
                    <li><NavLink exact activeStyle={{'color': '#9f0013'}} to="/">Characters</NavLink></li>
                    /
                    <li><NavLink exact activeStyle={{'color': '#9f0013'}} to="/comics">Comics</NavLink></li>
                </ul>
            </nav>
        </header>
    )
}

export default AppHeader;